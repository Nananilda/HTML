/* Estilos Gerais */
body {
  font-family: Arial, sans-serif;
  margin: 20px;
}

section {
  margin-bottom: 40px;
}

h2 {
  margin-top: 40px;
  border-bottom: 2px solid rgb(96, 128, 137);
  padding-bottom: 10px;
  text-align: center;
}

.grid-container{
    display: grid;
    background-color: rgb(222, 246, 255);
    padding: 10px;
    gap: 10px;
}

.item-grid{
    background-color: #8bc5f4;
    color: white;
    padding: 20px;
    font-size: 1.2em;
    /* em = relativo ao elemento pai */
    text-align: center;
    margin: 5px;
}

/* 1. grid básico com linhas e colunas definidas */
.basico{
    grid-template-columns: 1fr 1fr 1fr;
    /* fr = fração */
    grid-template-rows: 100px 100px;
    /* altura das linhas, tem dois valores pois tem duas linhas */
}

/* 2. uso do repeat(), minmax() e fr */
.repeat-minmax{
    grid-template-columns: repeat(4, minmax(100px, 1fr));
    /* 4 colunas com largura minima de 100 px e max 1 fração */
    grid-auto-rows: 100px;
    /* independente da quantidade de linhas todos devem ter 100px */
}

/* 3. grid responsivo com autofit() e minmax() */
.auto-fit{
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    /* ajusta o número de colunas conforme o espaço disponível */
    grid-auto-rows: 100px;
}

/* 4. grid com posicionamento de itens e sobreposição */
.sobreposicao{
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 100px 100px;

}

.item1{
    grid-column: 1 / 3;
    /* fala até onde vai pela quantidade total   */
    grid-row: 1/3;
    background-color: #8bc5f4;
}

.item2{
    grid-column: 2/4;
    grid-row: 1/2;
    background-color: rgba(255, 0, 0, 0.371);
    /* começa do dois e vai até o 4 */
}

.item3{
    grid-column: 1/4;
}

.item4{
    grid-column: 3/4;
}

/* 5. grid com areas nomeadas e alinhamento */
.areas-nomeadas{
    grid-template-areas: 
    "cabecalho cabecalho"
    /* repete para pegar o conteudo inteiro */
    "menu conteudo"
    "rodape rodape";
    grid-template-columns: 1fr 2fr;
    grid-template-rows: auto;
}

.cabecalho{
    grid-area: cabecalho;
    background-color: #717ddb;
}

.menu{
    grid-area: menu;
    background-color: #42caec;
}

.conteudo{
    grid-area: conteudo;
    background-color: rgb(82, 203, 214);
}

.rodape{
    grid-area: rodape;
    background-color: #90d3e0;
}

/* 6. grid com grid aninhado */
.grid-aninhado{
    grid-template-columns: repeat(2, 1fr);
}

.subgrid-container{
    display: grid;
    /* declara novamente grid pois é outra classe pai */
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 5px;
}

.subitem-grid{
    background-color: rgb(75, 116, 174);
    padding: 10px;
    color: rgb(255, 255, 255);
}

/* 7. Exemplo Prático: Layout Completo de Página */
.layout-pagina{
    grid-template-areas: 
    "header header header"
    "nav main aside"
    "footer footer footer";
    grid-template-columns: 1fr 2fr 1fr;
    text-align: center;
}

.header{
    grid-area: header;
    background-color: #3f51b5;
}

.nav{
    grid-area: nav;
    background-color: #8bc5f4;
    height: 450px;
}

.main{
    grid-area: main;
    background-color: #2196f3;
    height: 450px;
}

.aside{
    grid-area: aside;
    background-color: #717ddb;
    height: 450px;
}

.footer{
    grid-area: footer;
    background-color: #42caec;
}

